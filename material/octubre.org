* Temas abordados en el transcurso del mes de *octubre*

** Del temario formal

Para desarrollar esta unidad, sugiero que vayamos siguiendo el siguiente
texto que desarroll√© hace varios a√±os: [[https://ru.iiec.unam.mx/4047/1/tipos_de_ataque.pdf][Tipos de ataque]]. No est√° tan
actualizado como quisiera, y tiene varias ligas rotas, pero creo que
podremos utilizarlo para /jugar/ un tanto...

1. =2025.10.02=

   Repasamos las definiciones de /Control de acceso discrecional/ (/DAC/) y
   /Control de acceso mandatorio/ u /obligatorio/ (/MAC/), revisando la
   implementaci√≥n en Linux con =AppArmor= y =SELinux=.

   Entramos al tema /Tipos de ataque/ abordando el tema /Denegaci√≥n de
   servicio (DoS)/, cubriendo hasta /amplificaci√≥n y reflexi√≥n/.

2. =2025.10.07=

   Seguimos con los temas faltantes de negaci√≥n de servicio: Distribuidos
   (/DDoS/), DoS compuestos.

3. =2025.10.09=

   Dado que los alumnos est√°n ya familiarizados con el tema de
   /desbordamiento de buffer/, dimos un paso para profundizar en c√≥mo
   funcionan, y particularmente, en los /desbordamientos de pila/ (/stack
   overflows/): dedicamos la sesi√≥n a entender la estructura de los /marcos
   de stack/, el mecanismo empleado para llamar (y salir de) cualquier
   funci√≥n. Para esto, utilizamos el depurador =gdb=, comparando un par de
   programas ejemplo en C y su compilaci√≥n a ensamblador, y viendo el
   resultado en ejecuci√≥n

   Utilizamos el modo TUI de gdb (=gdb --tui=) sobre un par de programas
   compilados con la opci√≥n =-g= de =gcc=. Documentaci√≥n: [[https://www.sourceware.org/gdb/documentation/][GDB: The GNU
   Project Debugger]].

4. =2025.10.14=

   La idea de esta sesi√≥n es explorar algunas vulnerabilidades conocidas
   que emplean /distintos tipos/ de desbordamiento. Algunos CVEs para
   /jugar/:

   - CVE-2021-3156 :: Error /off-by-one/ que lleva a un desbordamiento de
     buffer que lleva a una escalaci√≥n de privilegios a root

   - CVE-2025-3277 :: Desbordamiento de enteros que permite una negaci√≥n de
     servicio o la ejecuci√≥n de c√≥digo arbitrario generando un
     desbordamiento de buffer en /heap/ sobre la funci√≥n =concat_ws()= de
     SQLite

   - CVE-2025-21333 :: Desbordamiento de enteros que lleva a la elevaci√≥n
     de privilegios en la integraci√≥n del n√∫cleo de Hyper-V con el kernel
     de Windows ‚Äî [[https://whiteknightlabs.com/2025/05/27/understanding-integer-overflow-in-windows-kernel-exploitation/][Explicaci√≥n y detalles]].

   - CVE-2025-4919 :: √çndice fuera de l√≠mites mediante una vulnerabilidad
     de confusi√≥n de √≠ndices en Javascript en Mozilla Firefox y Thunderbird

   - CVE-2025-38204 :: Lectura fuera de √≠ndices en la funci√≥n
     =add_missing_indices()= del subsistema JFS del kernel de Linux

   - Y2K y Y2038 :: Los desbordamientos no √∫nicamente se producen en lo que
     /conocemos como n√∫meros enteros/...

   *Y para nuestra siguiente clase...* ¬°Ahora les toca a ustedes! üòÉ

   - Busquen alguna vulnerabilidad ‚âàreciente (<5 a√±os) que lleve a una
     situaci√≥n de /elevaci√≥n de privilegios/ utilizando /alg√∫n tipo de
     desbordamiento/

   - Descr√≠banla en un par de p√°rrafos. Describan la naturaleza del
     software vulnerable, y d√≥nde podr√≠a estar corriendo que pueda resultar
     /motivo de preocupaci√≥n/

   - ¬øHay exploits conocidos? Expliquen brevemente c√≥mo funciona el
     exploit. ¬øNo los hay? expliquen /a grandes rasgos/ qu√© tipo de datos
     se tendr√≠an que inyectar para /acercarse/ a explotarlo.

   - ¬øHay parches o medidas de mitigaci√≥n disponibles p√∫blicamente?
     Expliquen su funcionamiento.

5. =2025.10.16=

   Como apuntamos, abordamos dos ejemplos de CVE de desbordamiento tra√≠dos
   por los alumnos: [[../entregas/02.CVE_escalation/AlfonsoRios/CVE-2024-53141.md][CVE-2024-53141]], sobre el subsistema /netfilter/ del
   n√∫cleo de Linux y [[../entregas/02.CVE_escalation/JRML-EJEMPLO][CVE-2023-4911]] (¬´Looney Tunables¬ª), de la biblioteca de
   C de Linux, /glibc/.

   Comenzamos a hablar de las inyecciones; las inyecciones de SQL son ya
   ampliamente conocidas por el grupo.

6. =2025.10.21=

7. =2025.10.23= Abordamos el tema de la codificaci√≥n de texto, siguiendo
   aproximadamente el texto de Joel Spolsky de 2003, [[https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/][The Absolute Minimum
   Every Software Developer Absolutely, Positively Must Know About Unicode
   and Character Sets (No Excuses!)]]

8. =2025.10.28= Continuamos con el tema de codificaci√≥n de datos, revisando
   la actualizaci√≥n del art√≠culo anterior tras 20 a√±os, [[https://tonsky.me/blog/unicode/][The Absolute
   Minimum Every Software Developer Must Know About Unicode in 2023 (Still
   No Excuses!)]], de Niki Tonsky (2023), y supongo que abordaremos tambien [[https://www.reedbeta.com/blog/programmers-intro-to-unicode/][A
   Programmer‚Äôs Introduction to Unicode]], de Nathan Reed (2017).

9. =2025.10.30= Para el tema de /algoritmos d√©biles de cifrado/:
   - POODLE (Padding Oracle On Downloaded Legacy Encryption) ‚áí
     [[https://www.cve.org/CVERecord?id=CVE-2014-3566][CVE-2014-3566]]
   - [[https://www.netcraft.com/blog/95-of-https-servers-vulnerable-to-trivial-mitm-attacks][95% of HTTPS servers vulnerable to trivial MITM attacks]] (Netcraft, 2023)
   - [[https://arxiv.org/abs/1809.05681][What's in a Downgrade? A Taxonomy of Downgrade Attacks in the TLS
     Protocol and Application Protocols Using TLS]]
   Fuerza criptogr√°fica comparada de protocolos:
   - [[https://www.keylength.com/][Bluecrypt ‚áí Cryptographic Key Length Recommendation]]
   - [[https://www.enisa.europa.eu/publications/algorithms-key-size-and-parameters-report-2014][Algorithms, key size and parameters report 2014]]
** Temas adicionales abordados

- =2025.10.07=

  Nunca dejan de aparecer peque√±os /giros de tuerca/ sobre /agujeros/ ya
  discutidos y analizados. Por ejemplo, el pasado 16 de septiembre, LWN
  present√≥ el texto [[https://lwn.net/Articles/1038326/][Another npm supply-chain attack]], refiri√©ndose al
  /ataque de cadena de suministro/ que emplea al paquete de NPM
  /Tinycontrol/, exfiltrando /todo tipo de secretos/. Hay un bonito
  [[https://krebsonsecurity.com/2025/09/self-replicating-worm-hits-180-software-packages/][art√≠culo al respecto en /Krebs on Security/]], y su /modus operandi/
  resuena fuertemente con el [[https://david-gilbertson.medium.com/im-harvesting-credit-card-numbers-and-passwords-from-your-site-here-s-how-9a8cb347c5b5][art√≠culo de 2018 de David Gilbertson]].

- =2025.10.07=

  Actividad a /intentar/ realizar juntos üòâ /An√°lisis de tr√°fico DDoS con
  Wireshark/
  - [[https://www.unb.ca/cic/datasets/ddos-2019.html][CIC-DDoS2019 DDoS evaluation dataset]], del Canadian Institute for
    Cybersecurity
  - [[https://medium.com/@ronak.d.sharma111/analyzing-a-ddos-attack-using-wireshark-8535274cd00e][Analyzing a DDOS Attack Using Wireshark]] (Ronak Sharma, Medium, 2024)
  - [[https://blog.oudel.com/how-to-detect-a-ddos-attack-using-wireshark/][How to Detect a DDoS Attack Using Wireshark?]]
  - An√°lisis gr√°fico en l√≠nea de interacci√≥n en archivos de captura =.pcap=
    ‚Üí [[https://lab.dynamite.ai][Dynamite Lab]]

